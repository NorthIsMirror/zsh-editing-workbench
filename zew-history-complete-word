emulate -LR zsh
setopt typesetsilent extendedglob noshortloops

# Prepare output variables for zew-process-buffer
local ZEW_PB_WORDS ZEW_PB_WORDS_BEGINNINGS ZEW_PB_SPACES 
local ZEW_PB_SELECTED_WORD ZEW_PB_LEFT ZEW_PB_RIGHT

autoload zew-process-buffer
zew-process-buffer "$BUFFER"

typeset -g __zew_csw_index __zew_csw_left __zew_csw_right
typeset -gaU __zew_csw_found

# Consecutive call?
if [ "${WIDGET%-backwards}" = "${LASTWIDGET%-backwards}" ]; then
    if [[ "$WIDGET" != *-backwards ]]; then
        (( __zew_csw_index ++ ))
    else
        (( __zew_csw_index -- ))
    fi
else
    if [[ "$WIDGET" != *-backwards ]]; then
        __zew_csw_index="1"
    else
        # Will get changed into $to_display limit
        __zew_csw_index="0"
    fi
    __zew_csw_left="$ZEW_PB_LEFT"
    __zew_csw_right="$ZEW_PB_RIGHT"
    __zew_csw_found=( )
fi

# Find history words matching $left ... $right
if [ "$#__zew_csw_found" -eq "0" ]; then
    repeat 1; do
        __zew_csw_found=( "${(@M)historywords:#(#i)$__zew_csw_left*$__zew_csw_right}" )
    done
fi

if [ "$#__zew_csw_found" -le "0" ]; then
    zle -M "No matches found"
    return 0
fi

# Pagination, index value guards
integer page_size=$(( LINES / 2 ))
integer max_index="$#__zew_csw_found"
[ "$page_size" -gt "$max_index" ] && page_size="$max_index"
[ "$__zew_csw_index" -le 0 ] && __zew_csw_index="$max_index"
[ "$__zew_csw_index" -gt "$max_index" ] && __zew_csw_index=1
integer page_start_idx=$(( ((__zew_csw_index-1)/page_size)*page_size+1 ))
integer on_page_idx=$(( (__zew_csw_index-1) % page_size + 1 ))

# Display matches
typeset -a disp_list
disp_list=( "${(@)__zew_csw_found[page_start_idx,page_start_idx+page_size-1]}" )
disp_list[on_page_idx]="> ${disp_list[on_page_idx]} <"
zle -M -- "Element #$__zew_csw_index of $max_index"$'\n'"${(F)disp_list}"

# Regenerate command line
buf=""
integer nwords="${#ZEW_PB_WORDS}"
integer newcursor=0
for (( i=1; i<=nwords; i++ )); do
    if [ "$i" = "$ZEW_PB_SELECTED_WORD" ]; then
        buf+="${ZEW_PB_SPACES[i]}${__zew_csw_found[__zew_csw_index]}"
        newcursor="$#buf"
    else
        buf+="${ZEW_PB_SPACES[i]}${ZEW_PB_WORDS[i]}"
    fi
done

# Set command line
BUFFER="$buf"
# Move cursor to the end of word
CURSOR="$newcursor"

# vim:ft=zsh
